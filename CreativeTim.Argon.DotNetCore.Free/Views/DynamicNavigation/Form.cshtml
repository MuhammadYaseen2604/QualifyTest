@model CreativeTim.Argon.DotNetCore.Free.Models.DynamicNav.NavigationItem
@using System.Web.Mvc.Html



<form id="saveNavigationForm" action="/DynamicNavigation/SaveNavigationItem" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="row mt-3">
        <div class="col-xl-12">
            <div class="card shadow">
                <div class="card-header bg-transparent">
                    <div class="row align-items-center">
                        <div class="col-lg-6 col-md-3">
                            <h6 class="text-uppercase text-muted ls-1 mb-1">Create/Edit</h6>
                            <h2 class="mb-0">Navigation Item</h2>
                        </div>
                        <div class="col-lg-6 col-md-9 text-right">
                            <button type="submit" class="btn btn-success save">Save</button>
                            <button onclick="history.back(); return false;" class="btn btn-warning">Dismiss</button>
                        </div>
                    </div>
                </div>
                <div class="card-body bg-secondary">
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>
                                Code <b class="text-red">*</b>
                            </label>
                            <input id="Code" name="Code" value="@ViewBag.SerialCode" class="form-control form-control-alternative " readonly required />
                        </div>

           
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>Name <b class="text-red">*</b></label>
                            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", @required = true } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<script>
        $(document).ready(function () {
            $('#saveNavigationForm').submit(function (event) {
                debugger
                event.preventDefault(); // Prevent the form from submitting normally
                debugger

                // Serialize form data
                var formData = $(this).serialize();
                debugger
                // AJAX request
                $.ajax({
                    url: '/DynamicNavigation/SaveNavigationItem',
                    type: 'POST',
                    data: formData,
                    beforeSend: function () {
                        // Function to execute before sending the request (optional)
                        SubmitStart();
                    },
                    success: function (data) {
                        // Function to execute if the request succeeds
                        SubmitEnd(data);
                        // Reload navigation item list
                        reloadNavigationItemList();
                    },
                    error: function (xhr, status, error) {
                        // Function to execute if the request fails
                        console.error(error);
                    },
                    complete: function () {
                        // Function to execute after the request completes (after success/error)
                    }
                });
            });
        });

        function SubmitStart() {
            // Code to execute before sending the AJAX request
        }

        function SubmitEnd(data) {
            debugger
            // Check if data is defined and has expected properties
            if (data && data.isSuccess !== undefined && data.message && data.type) {
                if (data.isSuccess === "True") {
                    console.log("data",data)
                    var ButtonMessage = data.isSaved === "True" ? "Saved" : "Updated";
                    $.notify(data.message, data.type);
                    $(".save").notify(ButtonMessage, data.type);
                } else {
                    $.notify(data.message, data.type);
                }
            } else {
                // Handle unexpected or incomplete data
                console.error("Invalid or incomplete data received:", data);
            }
        }

        function reloadNavigationItemList() {
            // Implement the logic to reload the navigation item list here
            // Redirect to the list view URL
            window.location.href = '/DynamicNavigation/Index';
        }


</script>
